<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TestACS.View"
             xmlns:VM="clr-namespace:TestACS.ViewModels"
             xmlns:System="clr-namespace:System;assembly=mscorlib" x:Class="TestACS.View.ACSControl"
             xmlns:converter="clr-namespace:TestACS.Converters"
             xmlns:rule="clr-namespace:TestACS.Rules"    
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"        
             xmlns:my="clr-namespace:System.Windows.Forms.Integration;assembly=WindowsFormsIntegration" 
             xmlns:DocView="clr-namespace:DocViewerDemo;assembly=DocViewerDemo"
             xmlns:test="clr-namespace:TestACS.ViewModels"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="500">
    <!--System.Windows.Interactivity(交互)    事件触发器-->
    <!--System.Windows.Forms.Integration(集成)    WPF控件和Windows.Form控件的互操作-->
    <UserControl.Resources>
        <converter:ColorConverterGreen x:Key="ColorConverter"/>
        <converter:StringConverter x:Key="StringConverter"/>
        <converter:MotorStateConverter x:Key="MotorStateConverter"/>
        <test:ACSControlViewModel x:Key="ACSControlViewModel"/>
    </UserControl.Resources>
    <Grid>
        <!--定义两行 第一行放标题 第二行放内容-->
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Label Content="{Binding MyVar}" VerticalAlignment="Center" Grid.Row="0"/>
        <!--ACS Control-->
        <!--第二行放入Grid-->
        <Grid Margin="0,25,0,5" Grid.RowSpan="2">
            <!--定义两列-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20*"/>
                    <RowDefinition Height="100*"/>
                    <RowDefinition Height="30*"/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Orientation="Horizontal">
                    <Button Margin="10,0" Content="Open" Height="20" Command="{Binding OpenSimulatorCMD}"/>
                    <Label FontSize="10" VerticalAlignment="Center" Margin="20,0,0,0" Content="Connect State"/>
                    <Ellipse Height="20" Width="20" Stroke="DarkBlue"  Margin="0,8">
                        <!--方法1：StaticResource|Fill="{Binding IsOpened, Converter={StaticResource ColorConverter}}"-->
                        <!--方法2：属性元素赋值,XAML会复杂，但是当Convert变多时不用在Resource中加入很多x:key-->
                        <Ellipse.Fill>
                            <Binding Path="IsOpened">
                                <Binding.Converter>
                                    <converter:ColorConverterGreen/>
                                </Binding.Converter>
                            </Binding>
                        </Ellipse.Fill>
                        <!--StaticResource ColorConverter-->
                    </Ellipse>
                </StackPanel>
                <StackPanel Grid.Row="1">
                    <StackPanel Orientation="Horizontal">
                        <ComboBox  Width="70" Margin="10" VerticalAlignment="Center" SelectedIndex="{Binding AxisNum}" ItemsSource="{Binding AxesList}"/>
                        <Button Width="45"  Height="25" Content="{Binding IsEnable,Converter={StaticResource StringConverter}}" Command="{Binding EnableOperationCMD}"/>
                        <Rectangle Width="50"/>
                        <Button  Width="45"  Height="25" Content="Stop" Foreground="Red" FontWeight="Bold" Command="{Binding StopMotionCMD}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="10">
                        <Rectangle Width="50"/>
                        <Button   Content="JOG +" Width="45"  Height="25">
                            <!--EventTrriger Button中不能给Command值-->
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding Jog_PCMD}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                    <i:InvokeCommandAction Command="{Binding StopMotionCMD}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                        <Rectangle Width="50"/>
                        <Button  Content="JOG -" Width="45"  Height="25">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding Jog_NCMD}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                    <i:InvokeCommandAction Command="{Binding StopMotionCMD}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Target Point" Margin="10" FontSize="10" VerticalAlignment="Center"/>
                        <TextBox Width="60" Height="20">
                            <!--Text="{Binding TargetPoint}-->
                            <TextBox.Text>
                                <Binding  Path="TargetPoint" UpdateSourceTrigger="Default">
                                    <Binding.ValidationRules>
                                        <rule:TargetPointRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <Rectangle Width="10"/>
                        <CheckBox Width="Auto" VerticalAlignment="Center" Content="REL" IsChecked="{Binding IsRel,Mode=TwoWay}"/>
                        <Rectangle Width="10"/>
                        <Button Content="Go" Width="45"  Height="25" Command="{Binding ToPointCMD}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,10">
                        <TextBlock Text="Motor State" Margin="10" FontSize="10"/>
                        <TextBox Height="20" Width="170" Text="{Binding State,Converter={StaticResource MotorStateConverter}}"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel  Grid.Row="2">
                    <TextBlock Text="Postion:" FontSize="10"/>
                    <Rectangle>
                        <!--测试内容-->
                        <!--<TextBlock  FontSize="10" Visibility="Hidden">-->
                        <!--Text="{Binding ACS.TestString}"-->
                        <!--
                        <TextBlock.Text>
                            -->
                        <!--数据的校验，一般Target到Source会校验-->
                        <!--
                            <Binding Path="ACS.TestString">
                                <Binding.ValidationRules>
                                    <rule:TestRules Min="0" Max="100"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBlock.Text>
                    </TextBlock>
                    <Button  Margin="0" Content="Test" Command="{Binding TestCMD}" Visibility="Hidden"/>-->
                    </Rectangle>
                    <!--<Slider  Value="{Binding ABC}"/>
                    <TextBox Text="{Binding ABC}"/>-->
                    <TextBox Margin="0" Height="22" Text="{Binding FeedbackPos,UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" TextAlignment="Center"/>
                    <!--{Binding FeedbackPos}-->
                    <Button Margin="0" Content="Clear" Command="{Binding ZeroFPostionCMD}"/>
                </StackPanel>
            </Grid>
            <!--<DocView:ControlDocViewer/>-->
            <my:WindowsFormsHost Name="windowsFormsHost1" Grid.Column="1" Margin="5">
                <DocView:ControlDocViewer/>
            </my:WindowsFormsHost>
            <Label Grid.Column="1" Content="右" VerticalAlignment="Center" HorizontalAlignment="Center"/>
        </Grid>
    </Grid>
</UserControl>
